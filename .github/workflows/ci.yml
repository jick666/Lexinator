name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read        # for checkout & diff
  pull-requests: write  # to post PR comments

env:
  NODE_LTS: '20.13.1'
  NODE_CUR: '22'
  COV_THRESHOLD: 90
  BENCH_THRESH_PCT: 10

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            .yarn/build-state.yml
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --immutable --frozen-lockfile
        name: Install dependencies

      - run: yarn lint
        name: ESLint

      - if: github.event_name == 'pull_request'
        run: |
          npx commitlint \
            --from ${{ github.event.pull_request.base.sha }} \
            --to   ${{ github.event.pull_request.head.sha }}
        name: Commitlint

  test:
    name: Test
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [${{ env.NODE_LTS }}, ${{ env.NODE_CUR }}]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            .yarn/build-state.yml
          key: ${{ runner.os }}-yarn-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node }}-
            ${{ runner.os }}-yarn-

      - run: yarn install --immutable --frozen-lockfile
        name: Install dependencies

      - run: yarn test -- --coverage
        name: Unit tests + coverage

      - name: Enforce â‰¥${{ env.COV_THRESHOLD }}% coverage
        run: yarn coverage:check --threshold=${{ env.COV_THRESHOLD }}

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node }}
          path: coverage

  bench:
    name: Benchmark
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            .yarn/build-state.yml
          key: ${{ runner.os }}-yarn-bench-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --immutable --frozen-lockfile
        name: Install dependencies

      - run: node --expose-gc tests/benchmarks/lexer.bench.js > bench.json
        name: Run benchmark

      - name: Download previous baseline
        uses: actions/download-artifact@v4
        with:
          name: bench-baseline
          path: baseline.json
        continue-on-error: true

      - name: Compare to baseline
        env:
          BENCH_THRESH_PCT: ${{ env.BENCH_THRESH_PCT }}
        run: |
          # fallback to empty baseline if none exists
          [ -f baseline.json ] || echo '{}' > baseline.json
          node tests/benchmarks/compare.js baseline.json bench.json

      - uses: actions/upload-artifact@v4
        with:
          name: bench
          path: |
            bench.json
            bench-report.txt

  comment:
    name: Post PR Summary
    if: github.event_name == 'pull_request'
    needs: [test, bench]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-${{ env.NODE_LTS }}
          path: cov

      - uses: actions/download-artifact@v4
        with:
          name: bench
          path: bench

      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: |
            cov/coverage-summary.json
            bench/bench-report.txt
          header: "CI summary"

  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    needs: [lint, test, bench]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            .yarn/build-state.yml
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --production --immutable
        name: Install production dependencies

      - run: yarn semantic-release
        name: Semantic Release

      - name: Upload new bench baseline
        if: github.actor != 'github-actions[bot]'
        uses: actions/upload-artifact@v4
        with:
          name: bench-baseline
          path: bench.json
