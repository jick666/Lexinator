name: CI

###############################################################################
# GLOBAL CONFIG
###############################################################################
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read          # checkout + diff
  pull-requests: write    # PR comment

env:
  NODE_LTS: 20.13.1
  NODE_CUR: 22
  COV_THRESHOLD: 90
  BENCH_THRESH_PCT: 10

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

###############################################################################
# JOB: lint
###############################################################################
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS }}
          cache: npm

      - run: npm ci --loglevel=error
        name: Install deps

      - run: npm run lint --if-present
        name: ESLint

      - run: |
          npx commitlint --from ${{ github.event.pull_request.base.sha }} \
                         --to   ${{ github.event.pull_request.head.sha }}
        if: github.event_name == 'pull_request'
        name: Commit-lint (PR only)

###############################################################################
# JOB: test  (Node 20 LTS + 22 Current)
###############################################################################
  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [${{ env.NODE_LTS }}, ${{ env.NODE_CUR }}]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - run: yarn ci --loglevel=error
        name: Install

      - run: yarn test -- --coverage
        name: Unit tests + coverage

      - run: |
          node -e "require('./src/utils/checkCoverage').checkCoverage(${process.env.COV_THRESHOLD})"
        name: Enforce ≥${{ env.COV_THRESHOLD }} % coverage

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node }}
          path: coverage
        name: Upload coverage artefact

###############################################################################
# JOB: bench
###############################################################################
  bench:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS }}
          cache: yarn

      - run: yarn ci --loglevel=error
        name: Install

      - run: node --expose-gc tests/benchmarks/lexer.bench.js > bench.json
        name: Run benchmark

      - name: Compare to baseline
        env:
          BENCH_THRESH_PCT: ${{ env.BENCH_THRESH_PCT }}
        run: |
          BASE_URL="https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/bench.json"
          curl -sfL "$BASE_URL" -o base.json || echo '{}' > base.json
          node tests/benchmarks/compare.js

      - uses: actions/upload-artifact@v4
        with:
          name: bench
          path: |
            bench.json
            bench-report.txt
        name: Upload bench artefacts

###############################################################################
# JOB: comment  (PR decoration)
###############################################################################
  comment:
    if: github.event_name == 'pull_request'
    needs: [test, bench]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: {name: coverage-${{ env.NODE_LTS }}, path: cov}

      - uses: actions/download-artifact@v4
        with: {name: bench, path: bench}

      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: |
            cov/coverage-summary.json
            bench/bench-report.txt
          header: "CI summary"
        name: Post PR summary

###############################################################################
# JOB: release  (semantic-release → GitHub only)
###############################################################################
  release:
    needs: [lint, test, bench]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages:  write
    env:
      # semantic-release insists on GITHUB_TOKEN, so alias our PAT
      GITHUB_TOKEN: ${{ secrets.PAT_REPO }}
      PAT_REPO:     ${{ secrets.PAT_REPO }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS }}
          cache: npm

      - run: npm ci --loglevel=error --only=prod
        name: Install prod deps

      - run: yarn semantic-release
        name: semantic-release

      - name: Upload new bench baseline
        if: github.actor != 'github-actions[bot]'
        env:
          PAT_REPO: ${{ secrets.PAT_REPO }}

